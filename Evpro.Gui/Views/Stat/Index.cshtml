@model IEnumerable<Evpro.Gui.Models.OureventModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Evpro-Template.cshtml";
}
<div class="content-wrapper" style="margin-top: -1800px;">
    <!-- Content Header (Page header) -->
    <section class="content-header">

        <section class="content">
            <div class="row">
                <div class="col-xs-12">
                    <div class="box">
                        <div class="box-header">
                            <h3 class="box-title">Tasks Table</h3>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <table id="example2" class="table table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>
                                            @Html.DisplayNameFor(model => model.name)
                                        </th>
                                        <th>
                                            @Html.DisplayNameFor(model => model.description)
                                        </th>


                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.name)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.description)

                                            </td>


                                            <td>

                                                <button class="btn btn-info" data-target="#exampleNiftySuperScaled_@item.idEvent" data-toggle="modal" type="button">
                                                    View info
                                                </button>
                                                <!-- Modal -->
                                                <div class="modal fade modal-super-scaled" id="exampleNiftySuperScaled_@item.idEvent" aria-hidden="true" aria-labelledby="exampleModalTitle" role="dialog" tabindex="-1">
                                                    <div class="modal-dialog" style="width: 1800px;">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                    <span aria-hidden="true">×</span>
                                                                </button>
                                                                <h4 class="modal-title">Event Info</h4>
                                                            </div>

                                                            <div class="modal-body">

                                                
                                                                <div class="col-md-3 col-sm-6 col-xs-12">
                                                                    <div class="info-box bg-green">
                                                                        <span class="info-box-icon"><i class="fa fa-thumbs-o-up"></i></span>
                                                                        <div class="info-box-content">
                                                                            <span class="info-box-text">Done</span>
                                                                            <div class="progress">
                                                                                <div class="progress-bar" style="width: @Html.DisplayFor(modelItem => item.Done_task)"></div>
                                                                            </div>
                                                                            <span class="progress-description">
                                                                                @Html.DisplayFor(modelItem => item.Done_task)
                                                                            </span>
                                                                        </div>
                                                                        <!-- /.info-box-content -->
                                                                    </div>
                                                                    <!-- /.info-box -->
                                                                </div>
                                                                <div class="col-md-3 col-sm-6 col-xs-12">
                                                                    <div class="info-box bg-yellow">
                                                                        <span class="info-box-icon"><i class="ion ion-stats-bars"></i></span>
                                                                        <div class="info-box-content">
                                                                            <span class="info-box-text">Doing</span>
                                                                            <div class="progress">
                                                                                <div class="progress-bar" style="width: @Html.DisplayFor(modelItem => item.Doing_task)"></div>
                                                                            </div>
                                                                            <span class="progress-description">
                                                                                @Html.DisplayFor(modelItem => item.Doing_task)
                                                                            </span>
                                                                        </div>
                                                                        <!-- /.info-box-content -->
                                                                    </div>
                                                                    <!-- /.info-box -->
                                                                </div>
                                                                <div class="col-md-3 col-sm-6 col-xs-12">
                                                                    <div class="info-box bg-red">
                                                                        <span class="info-box-icon"><i class="fa fa-thumbs-o-down"></i></span>
                                                                        <div class="info-box-content">
                                                                            <span class="info-box-text">ToDo</span>
                                                                            <div class="progress">
                                                                                <div class="progress-bar" style="width: @Html.DisplayFor(modelItem => item.ToDo_task)"></div>
                                                                            </div>
                                                                            <span class="progress-description">
                                                                                @Html.DisplayFor(modelItem => item.ToDo_task)                                                                            </span>
                                                                        </div>
                                                                        <!-- /.info-box-content -->
                                                                    </div>


                                                                </div>
                                                            <div class="modal-footer">
                                                                <button type="button" class="btn btn-default btn-pure margin-0" data-dismiss="modal">Close</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- End Modal -->

                                            </td>

                                        </tr>
                                    }
                                </tbody>

                            </table>
                            <div class="box box-danger">
                                <div class="box-header with-border">
                                    <h3 class="box-title">Tasks</h3>
                                    <div class="box-tools pull-right">
                                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                            <i class="fa fa-minus"></i>
                                        </button>
                                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                                    </div>
                                </div>
                                <div class="box-body">
                                    <canvas id="pieChart" style="height: 250px;"></canvas>
                                </div>
                                <!-- /.box-body -->
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col -->
            </div>
            <!-- /.row -->
        </section>


    </section>
    <!-- Main content -->
    <section class="content"></section>
</div>

<section class="content">
    <div class="row">
        <div class="col-md-6">

            <!-- AREA CHART -->
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h3 class="box-title">Participants,Events</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="areaChart" style="height: 250px"></canvas>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
            <!-- DONUT CHART -->
            <!-- /.box -->
        </div>
        <!-- /.col (LEFT) -->
        <div class="col-md-6">
            <!-- LINE CHART -->
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Task</h3>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                    </div>
                </div>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="lineChart" style="height:250px"></canvas>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
            <!-- BAR CHART -->
            <!-- /.box -->
        </div>
        <!-- /.col (RIGHT) -->
    </div>
    <!-- /.row -->
</section>

  
<!-- Main content -->
<section class="content"></section>


<!-- Page script -->

<script src="~/Content/Evpro-Template/plugins/jQuery/jquery-2.2.3.min.js"></script>
<!-- Bootstrap 3.3.6 -->
<script src="~/Content/Evpro-Template/bootstrap/js/bootstrap.min.js"></script>
<!-- ChartJS 1.0.1 -->
<script src="~/Content/Evpro-Template/plugins/chartjs/Chart.min.js"></script>
<!-- FastClick -->
<script src="~/Content/Evpro-Template/plugins/fastclick/fastclick.js"></script>
<!-- AdminLTE App -->
<script src="~/Content/Evpro-Template/dist/js/app.min.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="~/Content/Evpro-Template/dist/js/demo.js"></script>

<script>
    $(function () {
        /* ChartJS
         * -------
         * Here we will create a few charts using ChartJS
         */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.
        var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
        // This will get the first returned node in the jQuery collection.
        var areaChart = new Chart(areaChartCanvas);

        var areaChartData = {
            labels: ["Janvier", "February", "March", "April", "May", "June", "July"],
            datasets: [
              {
                  label: "Participants",
                  fillColor: "rgba(210, 214, 222, 1)",
                  strokeColor: "rgba(210, 214, 222, 1)",
                  pointColor: "rgba(210, 214, 222, 1)",
                  pointStrokeColor: "#c1c7d1",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
                  data: [65, 59, 80, 81, 56, 55, 40]
              },
              {
                  label: "Events",
                  fillColor: "rgba(60,141,188,0.9)",
                  strokeColor: "rgba(60,141,188,0.8)",
                  pointColor: "#3b8bba",
                  pointStrokeColor: "rgba(60,141,188,1)",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(60,141,188,1)",
                  data: [28, 48, 40, 19, 86, 27, 90]
              }
            ]
        };

        var areaChartOptions = {
            //Boolean - If we should show the scale at all
            showScale: true,
            //Boolean - Whether grid lines are shown across the chart
            scaleShowGridLines: false,
            //String - Colour of the grid lines
            scaleGridLineColor: "rgba(0,0,0,.05)",
            //Number - Width of the grid lines
            scaleGridLineWidth: 1,
            //Boolean - Whether to show horizontal lines (except X axis)
            scaleShowHorizontalLines: true,
            //Boolean - Whether to show vertical lines (except Y axis)
            scaleShowVerticalLines: true,
            //Boolean - Whether the line is curved between points
            bezierCurve: true,
            //Number - Tension of the bezier curve between points
            bezierCurveTension: 0.3,
            //Boolean - Whether to show a dot for each point
            pointDot: false,
            //Number - Radius of each point dot in pixels
            pointDotRadius: 4,
            //Number - Pixel width of point dot stroke
            pointDotStrokeWidth: 1,
            //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
            pointHitDetectionRadius: 20,
            //Boolean - Whether to show a stroke for datasets
            datasetStroke: true,
            //Number - Pixel width of dataset stroke
            datasetStrokeWidth: 2,
            //Boolean - Whether to fill the dataset with a color
            datasetFill: true,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
            //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true
        };

        //Create the line chart
        areaChart.Line(areaChartData, areaChartOptions);

        //-------------
        //- LINE CHART -
        //--------------
        var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
        var lineChart = new Chart(lineChartCanvas);
        var lineChartOptions = areaChartOptions;
        lineChartOptions.datasetFill = false;
        lineChart.Line(areaChartData, lineChartOptions);

        //-------------
        //- PIE CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
        var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
        var pieChart = new Chart(pieChartCanvas);
     
    
        var Done = '@(ViewBag.Donetask)';
        var Doing = '@(ViewBag.Doingtask)';
        var ToDo = '@(ViewBag.ToDotask)';



        var PieData = [
          {
              value: Done,
              color: "#f56954",
              highlight: "#f56954",
              label: "Done"
          },
          {
              value: Doing,
              color: "#00a65a",
              highlight: "#00a65a",
              label: "Doing"
          },
          {
              value: ToDo,
              color: "#f39c12",
              highlight: "#f39c12",
              label: "ToDo"
          }

        ];
        var pieOptions = {
            //Boolean - Whether we should show a stroke on each segment
            segmentShowStroke: true,
            //String - The colour of each segment stroke
            segmentStrokeColor: "#fff",
            //Number - The width of each segment stroke
            segmentStrokeWidth: 2,
            //Number - The percentage of the chart that we cut out of the middle
            percentageInnerCutout: 50, // This is 0 for Pie charts
            //Number - Amount of animation steps
            animationSteps: 100,
            //String - Animation easing effect
            animationEasing: "easeOutBounce",
            //Boolean - Whether we animate the rotation of the Doughnut
            animateRotate: true,
            //Boolean - Whether we animate scaling the Doughnut from the centre
            animateScale: false,
            //Boolean - whether to make the chart responsive to window resizing
            responsive: true,
            // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
            maintainAspectRatio: true,
            //String - A legend template
            legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
        };
        //Create pie or douhnut chart
        // You can switch between pie and douhnut using the method below.
        pieChart.Doughnut(PieData, pieOptions);

        //-------------
        //- BAR CHART -
        //-------------

    });
</script>