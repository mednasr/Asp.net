@model IEnumerable<Evpro.Gui.Models.SatsifactionSurveyModel>

@{
      ViewBag.Title = "Index";
      Layout = "~/Views/Shared/Evpro-Template.cshtml";
}

<div class="content-wrapper" style="margin-top: -1800px;">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h2>Index</h2>

        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.eventName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.idSurvey)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.creationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.descreptiveText)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.messageInfo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.idEvent_fk)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.idParticipant)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.eventName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.idSurvey)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.creationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.descreptiveText)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.messageInfo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.idEvent_fk)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.idParticipant)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.idSurvey }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>
                </tr>
                }

        </table>


        <div class="row">
            <div class="col-xs-12">
                <div class="box">
                    <div class="box-header">
                        <h3 class="box-title">Satisfaction Survey Management</h3>

                        <div class="box-tools">
                            <div class="input-group input-group-sm" style="width: 150px;">
                                <input type="text" name="table_search" class="form-control pull-right" placeholder="Search">

                                <div class="input-group-btn">
                                    <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.box-header -->
                    <div class="box-body table-responsive no-padding">
                        <table class="table table-hover">
                            <tr>
                                <th>Event Name</th>
                                <th>idSurvey</th>
                                <th>Creation Date</th>
                                <th>Decreptive Text</th>
                                <th>Status</th>
                            </tr>
                            @foreach (var item in Model)
                                {
                                <tr>



                                    <td>@Html.DisplayFor(modelItem => item.eventName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.idSurvey)</td>
                                    <td>@Html.DisplayFor(modelItem => item.creationDate)</td>
                                    <td>@Html.DisplayFor(modelItem => item.descreptiveText)</td>

                                    <td><span class="label label-success">Approved</span></td>
                                    <td>
                                        @Html.ActionLink("Edit", "Edit", new { id = item.idSurvey }, new { @class = "btn btn-block btn-warning btn-sm" })
                                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-block btn-info btn-sm" })
                                        @Html.ActionLink("Delete", "Delete", new { id = item.idSurvey }, new { @class = "btn btn-block btn-danger btn-sm" })
                                    </td>

                                </tr>



                                }

                        </table>


                    </div>
                    <!-- /.box-body -->
                </div>
                <!-- /.box -->
            </div>
        </div>
        @ViewBag.statSatis @* nombre des participants qui ont ajoute une satisfaction et qui appartiennent a esprit *@

    


        @* ------------------------stats----------------------------------*@

        <section class="content">
            <div class="row">
                <div class="col-md-6">
                    <!-- AREA CHART -->
                    <div class="box box-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title"> Satisfactions per Participants Events</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="areaChart" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                    <!-- DONUT CHART -->
                    <div class="box box-danger">
                        <div class="box-header with-border">
                            <h3 class="box-title">Esprit participants survey</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <canvas id="pieChart" style="height: 250px;"></canvas>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                </div>
                <!-- /.col (LEFT) -->
                <div class="col-md-6">
                    <!-- LINE CHART -->
                    <div class="box box-info">
                        <div class="box-header with-border">
                            <h3 class="box-title">Participants,Events</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="chart">
                                <canvas id="lineChart" style="height:250px"></canvas>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                    <!-- /.box -->
                    <!-- BAR CHART -->
                    <!-- /.box -->
                </div>
                <!-- /.col (RIGHT) -->
            </div>
            <!-- /.row -->
        </section>

    </section>
    <!-- Main content -->
    <section class="content"></section>
</div>

<!-- Page script -->

<script src="~/Content/Evpro-Template/plugins/jQuery/jquery-2.2.3.min.js"></script>
<!-- Bootstrap 3.3.6 -->
<script src="~/Content/Evpro-Template/bootstrap/js/bootstrap.min.js"></script>
<!-- ChartJS 1.0.1 -->
<script src="~/Content/Evpro-Template/plugins/chartjs/Chart.min.js"></script>
<!-- FastClick -->
<script src="~/Content/Evpro-Template/plugins/fastclick/fastclick.js"></script>
<!-- AdminLTE App -->
<script src="~/Content/Evpro-Template/dist/js/app.min.js"></script>
<!-- AdminLTE for demo purposes -->
<script src="~/Content/Evpro-Template/dist/js/demo.js"></script>

<script>
  $(function () {
    /* ChartJS
     * -------
     * Here we will create a few charts using ChartJS
     */

    //--------------
    //- AREA CHART -
    //--------------

    // Get context with jQuery - using jQuery's .get() method.
    var areaChartCanvas = $("#areaChart").get(0).getContext("2d");
    // This will get the first returned node in the jQuery collection.
    var areaChart = new Chart(areaChartCanvas);

    var areaChartData = {
        labels: [  @foreach (var item in ViewBag.listeventsnames)
            {

             string.Join(", ", @item);


            }],
      datasets: [
        {
          label: "surveys",
          fillColor: "rgba(210, 214, 222, 1)",
          strokeColor: "rgba(210, 214, 222, 1)",
          pointColor: "rgba(210, 214, 222, 1)",
          pointStrokeColor: "#c1c7d1",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(220,220,220,1)",
          data: [65, 59, 80, 81, 56, 55, 40]
        },
        {
          label: "Events",
          fillColor: "rgba(60,141,188,0.9)",
          strokeColor: "rgba(60,141,188,0.8)",
          pointColor: "#3b8bba",
          pointStrokeColor: "rgba(60,141,188,1)",
          pointHighlightFill: "#fff",
          pointHighlightStroke: "rgba(60,141,188,1)",
          data: [28, 48, 40, 19, 86, 27, 90]
        }
      ]
    };

    var areaChartOptions = {
      //Boolean - If we should show the scale at all
      showScale: true,
      //Boolean - Whether grid lines are shown across the chart
      scaleShowGridLines: false,
      //String - Colour of the grid lines
      scaleGridLineColor: "rgba(0,0,0,.05)",
      //Number - Width of the grid lines
      scaleGridLineWidth: 1,
      //Boolean - Whether to show horizontal lines (except X axis)
      scaleShowHorizontalLines: true,
      //Boolean - Whether to show vertical lines (except Y axis)
      scaleShowVerticalLines: true,
      //Boolean - Whether the line is curved between points
      bezierCurve: true,
      //Number - Tension of the bezier curve between points
      bezierCurveTension: 0.3,
      //Boolean - Whether to show a dot for each point
      pointDot: false,
      //Number - Radius of each point dot in pixels
      pointDotRadius: 4,
      //Number - Pixel width of point dot stroke
      pointDotStrokeWidth: 1,
      //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
      pointHitDetectionRadius: 20,
      //Boolean - Whether to show a stroke for datasets
      datasetStroke: true,
      //Number - Pixel width of dataset stroke
      datasetStrokeWidth: 2,
      //Boolean - Whether to fill the dataset with a color
      datasetFill: true,
      //String - A legend template
      legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>",
      //Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio: true,
      //Boolean - whether to make the chart responsive to window resizing
      responsive: true
    };

    //Create the line chart
    areaChart.Line(areaChartData, areaChartOptions);

    //-------------
    //- LINE CHART -
    //--------------
    var lineChartCanvas = $("#lineChart").get(0).getContext("2d");
    var lineChart = new Chart(lineChartCanvas);
    var lineChartOptions = areaChartOptions;
    lineChartOptions.datasetFill = false;
    lineChart.Line(areaChartData, lineChartOptions);

    //-------------
    //- PIE CHART -
    //-------------
    // Get context with jQuery - using jQuery's .get() method.
    var pieChartCanvas = $("#pieChart").get(0).getContext("2d");
    var pieChart = new Chart(pieChartCanvas);
    var participantsSatisfied = '@(ViewBag.statSatis)';
      var notsatisfied = '@(ViewBag.notsatisfied)';


    var PieData = [

      {
          value: participantsSatisfied,
        color: "#00c0ef",
        highlight: "#00c0ef",
        label: "participants from esprit who replied on satisfaction survey"
      },
        {
            value: notsatisfied,
            color: "#95060B",
            highlight: "#95060B",
            label: "participants didn't satisfied"
        }


    ];
    var pieOptions = {
      //Boolean - Whether we should show a stroke on each segment
      segmentShowStroke: true,
      //String - The colour of each segment stroke
      segmentStrokeColor: "#fff",
      //Number - The width of each segment stroke
      segmentStrokeWidth: 2,
      //Number - The percentage of the chart that we cut out of the middle
      percentageInnerCutout: 50, // This is 0 for Pie charts
      //Number - Amount of animation steps
      animationSteps: 100,
      //String - Animation easing effect
      animationEasing: "easeOutBounce",
      //Boolean - Whether we animate the rotation of the Doughnut
      animateRotate: true,
      //Boolean - Whether we animate scaling the Doughnut from the centre
      animateScale: false,
      //Boolean - whether to make the chart responsive to window resizing
      responsive: true,
      // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container
      maintainAspectRatio: true,
      //String - A legend template
      legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"
    };
    //Create pie or douhnut chart
    // You can switch between pie and douhnut using the method below.
    pieChart.Doughnut(PieData, pieOptions);

    //-------------
    //- BAR CHART -
    //-------------

  });
</script>


    </section>
<!-- Main content -->
<section class="content"></section>
</div>